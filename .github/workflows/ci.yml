name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3']
    
    name: PHP ${{ matrix.php-version }} Tests
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl
        coverage: xdebug
    
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Configure GitHub token for Composer
      run: composer config github-oauth.github.com ${{ secrets.GH_COMPOSER_TOKEN }}
    
    # BEGIN PHP 7.2+ & 8.0+
    - name: Install dependencies (PHP >= 7.2)
      if: matrix.php-version >= '7.2'
      run: composer install --prefer-dist --no-progress
    # END PHP 7.2+ & 8.0+
    
    # BEGIN PHP 5.6, 7.0 & 7.1
    # Error : No composer.lock file present. Updating dependencies to latest instead of installing from lock file.
    # So we remove the composer install as first command and remove the composer.lock file (to be sure there are not)
    # After that we add atoum dependencies and remove phpstan, phpcs and phpmd (not compatible with PHP < 7.2)
    # Finally we do a composer install without PHP 7.2+ dependencies so we are good
    - name: Remove composer.lock (PHP < 7.2)
      if: matrix.php-version < '7.2'
      run: rm -f composer.lock
    
    - name: Install atoum/atoum & atoum/visibility-extension (PHP < 7.2)
      if: matrix.php-version < '7.2'
      run: composer require --no-update --dev atoum/atoum:^3.1 atoum/visibility-extension:^1.3
    
    - name: Remove others dev dependencies (PHP < 7.2)
      if: matrix.php-version < '7.2'
      run: composer remove --no-update --dev phpstan/phpstan squizlabs/php_codesniffer phpmd/phpmd
    
    - name: Install dependencies (PHP < 7.2)
      if: matrix.php-version < '7.2'
      run: composer install --prefer-dist --no-progress --ignore-platform-reqs
    # END PHP 5.6, 7.0 & 7.1
    
    - name: Run test suite
      run: ./vendor/bin/atoum -c .atoum.php +verbose
      env:
        CI: true
        ENABLE_COVERAGE: ${{ matrix.php-version == '8.3' && 'true' || 'false' }}

    - name: Upload coverage to Codecov
      if: matrix.php-version == '8.3'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Notify badge service
      if: always()
      run: |
        curl -X POST "https://gh-badges.bulton.fr/webhook" \
          -H "Content-Type: application/json" \
          -d "{\"secure_key\":\"${{ secrets.GH_BADGE_SECURE_KEY }}\",\"repository\":\"${{ github.repository }}\",\"branch\":\"${{ github.head_ref || github.ref_name }}\",\"workflow_name\":\"${{ github.workflow }}\",\"job_name\":\"${{ github.job }}\",\"status\":\"${{ job.status }}\"}"

  phpstan:
    runs-on: ubuntu-latest
    name: PHPStan Analysis
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, intl
        coverage: none
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-phpstan-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-phpstan-

    - name: Configure GitHub token for Composer
      run: composer config github-oauth.github.com ${{ secrets.GH_COMPOSER_TOKEN }}
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Run PHPStan
      run: ./vendor/bin/phpstan analyse --memory-limit=1G

    - name: Notify badge service
      if: always()
      run: |
        curl -X POST "https://gh-badges.bulton.fr/webhook" \
          -H "Content-Type: application/json" \
          -d "{\"secure_key\":\"${{ secrets.GH_BADGE_SECURE_KEY }}\",\"repository\":\"${{ github.repository }}\",\"branch\":\"${{ github.head_ref || github.ref_name }}\",\"workflow_name\":\"${{ github.workflow }}\",\"job_name\":\"${{ github.job }}\",\"status\":\"${{ job.status }}\"}"

  phpcs:
    runs-on: ubuntu-latest
    name: Code Style Check
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, intl
        coverage: none
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-phpcs-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-phpcs-

    - name: Configure GitHub token for Composer
      run: composer config github-oauth.github.com ${{ secrets.GH_COMPOSER_TOKEN }}

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run PHP CodeSniffer
      run: ./vendor/bin/phpcs

    - name: Notify badge service
      if: always()
      run: |
        curl -X POST "https://gh-badges.bulton.fr/webhook" \
          -H "Content-Type: application/json" \
          -d "{\"secure_key\":\"${{ secrets.GH_BADGE_SECURE_KEY }}\",\"repository\":\"${{ github.repository }}\",\"branch\":\"${{ github.head_ref || github.ref_name }}\",\"workflow_name\":\"${{ github.workflow }}\",\"job_name\":\"${{ github.job }}\",\"status\":\"${{ job.status }}\"}"

  phpmd:
    runs-on: ubuntu-latest
    name: Mess Detector
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, intl
        coverage: none
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-phpmd-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-phpmd-

    - name: Configure GitHub token for Composer
      run: composer config github-oauth.github.com ${{ secrets.GH_COMPOSER_TOKEN }}
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Run PHPMD
      run: ./vendor/bin/phpmd src text cleancode,codesize,controversial,design,naming,unusedcode

    - name: Notify badge service
      if: always()
      run: |
        curl -X POST "https://gh-badges.bulton.fr/webhook" \
          -H "Content-Type: application/json" \
          -d "{\"secure_key\":\"${{ secrets.GH_BADGE_SECURE_KEY }}\",\"repository\":\"${{ github.repository }}\",\"branch\":\"${{ github.head_ref || github.ref_name }}\",\"workflow_name\":\"${{ github.workflow }}\",\"job_name\":\"${{ github.job }}\",\"status\":\"${{ job.status }}\"}"